version: '3.9'
services:
  frontend:
    build:
      context: ./front-end
      dockerfile: Dockerfile
      pull: false  # Use local cache to avoid credential issues
    platform: linux/amd64
    volumes:
      - ./front-end:/app
      - /app/node_modules  # prevent overwriting node_modules with host
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:3001
      - NEXT_FONT_GOOGLE_MOCKED_RESPONSES='[{"url":"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap","content":"/* mocked */"}]'
    command: npm run dev
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    build:
      context: ./back-end
      dockerfile: Dockerfile.minimal
      pull: false  # Use local cache to avoid credential issues
    volumes:
      - ./back-end/src:/app/src
      - ./back-end/prisma:/app/prisma
      - ./back-end/package.json:/app/package.json
      - ./back-end/package-lock.json:/app/package-lock.json
      - uploads:/app/src/uploads  # Persist upload directory
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/mydb
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-here}
      - NODE_ENV=development
      - BASE_URL=http://localhost:3001
    command: sh -c "sleep 10 && npx prisma migrate deploy && npx prisma generate && npm run dev"
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      # Alternative: Use bind mount for direct access to data
      # - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin for database GUI
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db

  # MinIO for S3-compatible storage
  minio:
    image: minio/minio:latest
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  pgdata:
  uploads:
  minio_data:
  pgadmin_data:
